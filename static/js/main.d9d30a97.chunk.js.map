{"version":3,"sources":["components/Message.js","App.js","index.js"],"names":["Message","state","isLiked","counter","handleClick","bind","console","log","this","setState","props","name","logo","title","text","date","Date","displayDate","getDate","getMonth","getFullYear","btnClassName","className","src","alt","onClick","React","Component","App","userData","axios","get","then","res","data","results","to","path","exact","map","index","picture","location","id","first","last","thumbnail","country","city","key","value","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6UAgEeA,G,wDA1DX,aAAe,IAAD,8BACV,gBAEKC,MAAQ,CACTC,SAAS,EACTC,QAAS,GAGb,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBART,E,gEAYVC,QAAQC,IAAI,6D,6CAIZD,QAAQC,IAAI,wG,oCAGD,IAAD,EACmBC,KAAKP,MAA1BC,EADE,EACFA,QAASC,EADP,EACOA,QACjBK,KAAKC,SAAS,CAAEP,SAAUA,EAASC,QAASA,EAAU,M,+BAGhD,IAAD,EAC+BK,KAAKE,MAAjCC,EADH,EACGA,KAAMC,EADT,EACSA,KAAMC,EADf,EACeA,MAAOC,EADtB,EACsBA,KADtB,EAEwBN,KAAKP,MAA1BC,EAFH,EAEGA,QAASC,EAFZ,EAEYA,QACXY,EAAO,IAAIC,KACXC,EAAW,UAAMF,EAAKG,UAAX,YAAwBH,EAAKI,WAAa,EAA1C,YAA+CJ,EAAKK,eAE/DC,EAAY,gCAA4BnB,EAAU,+BAAiC,IACzF,OACI,yBAAKoB,UAAU,WACX,yBAAKA,UAAU,kBACX,yBAAKC,IAAKX,EAAMU,UAAU,uBAAuBE,IAAI,SACrD,yBAAKF,UAAU,6BACX,uBAAGA,UAAU,wBAAwBX,GACrC,uBAAGW,UAAU,uBAAuBL,KAG5C,4BACIK,UAAWD,EACXI,QAASjB,KAAKJ,cAGlB,0BAAMkB,UAAU,0BAA0BnB,GAE1C,yBAAKmB,UAAU,gBACX,wBAAIA,UAAU,sBAAsBT,GACpC,uBAAGS,UAAU,wBAAwBR,S,GAlDnCY,IAAMC,YC+EbC,E,kDArEb,WAAYlB,GAAQ,IAAD,8BACjB,cAAMA,IAEDT,MAAQ,CACX4B,SAAU,IAJK,E,gEAOE,IAAD,OAClBC,IAAMC,IAXE,wCAYLC,MAAK,SAAAC,GACJ3B,QAAQC,IAAI0B,EAAIC,MAEhB,EAAKzB,SAAS,CAAEoB,SAAUI,EAAIC,KAAKC,e,+BAI/B,IACAN,EAAarB,KAAKP,MAAlB4B,SACR,OACE,kBAAC,IAAD,KACE,yBAAKP,UAAU,cACb,wBAAIA,UAAU,mBAEZ,4BACE,kBAAC,IAAD,CAAMc,GAAG,IAAId,UAAU,mBAAvB,SAGF,4BACE,kBAAC,IAAD,CAAMc,GAAG,SAASd,UAAU,mBAA5B,UAIF,4BACE,kBAAC,IAAD,CAAMc,GAAG,UAAUd,UAAU,mBAA7B,cAKN,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOe,KAAK,IAAIC,OAAK,GACnB,yBAAKhB,UAAU,OACZO,EAASU,KAAI,WAAkCC,GAAW,IAA1C7B,EAAyC,EAAzCA,KAAM8B,EAAmC,EAAnCA,QAASC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,GACxC,OACE,kBAAC,EAAD,CAEEhC,KAAI,UAAKA,EAAKiC,MAAV,YAAmBjC,EAAKkC,MAC5BjC,KAAM6B,EAAQK,UACdjC,MAAO6B,EAASK,QAChBjC,KAAM4B,EAASM,KACfC,IAAKN,EAAGO,aAMlB,kBAAC,IAAD,CAAOb,KAAK,UACV,uBAAGf,UAAU,aAAb,UAEF,kBAAC,IAAD,CAAOe,KAAK,WACV,uBAAGf,UAAU,aAAb,2B,GA5DMI,IAAMC,WCRxBwB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.d9d30a97.chunk.js","sourcesContent":["import React from 'react';\r\n// import logo from '../logo.svg';\r\n\r\nimport './Message.css';\r\n\r\nclass Message extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            isLiked: false,\r\n            counter: 0\r\n        };\r\n\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log('Я собрался');\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        console.log('Я буду разбираться');\r\n    }\r\n\r\n    handleClick() {\r\n        const { isLiked, counter } = this.state;\r\n        this.setState({ isLiked: !isLiked, counter: counter + 1 });\r\n    }\r\n\r\n    render() {\r\n        const { name, logo, title, text } = this.props;\r\n        const { isLiked, counter } = this.state;\r\n        const date = new Date();\r\n        const displayDate = `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`;\r\n\r\n        const btnClassName = `message-header-button ${isLiked ? 'message-header-button_active' : ''}`;\r\n        return (\r\n            <div className=\"message\" >\r\n                <div className=\"message-header\">\r\n                    <img src={logo} className=\"message-header-image\" alt=\"logo\" />\r\n                    <div className=\"message-header-text_block\">\r\n                        <p className=\"message-header-title\">{name}</p>\r\n                        <p className=\"message-header-date\">{displayDate}</p></div>\r\n\r\n                </div>\r\n                <button\r\n                    className={btnClassName}\r\n                    onClick={this.handleClick}\r\n                />\r\n\r\n                <span className=\"message-header-counter\">{counter}</span>\r\n\r\n                <div className=\"message-body\">\r\n                    <h2 className=\"message-body-title\">{title}</h2>\r\n                    <p className=\"message-body-content\">{text}</p>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Message;\r\n\r\n// function Message(props) {\r\n//     const { name, logo, title, text } = props;\r\n//     const date = new Date();\r\n//     const displayDate = `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`;\r\n//     return (\r\n//         <div className=\"message\">\r\n//             <div className=\"message-header\">\r\n//                 <img src={logo} className=\"message-header-image\" alt=\"logo\" />\r\n//                 <div className=\"message-header-text_block\">\r\n//                     <p className=\"message-header-title\">{name}</p>\r\n//                     <p className=\"message-header-date\">{displayDate}</p></div>\r\n//             </div>\r\n//             <div className=\"message-body\">\r\n//                 <h2 className=\"message-body-title\">{title}</h2>\r\n//                 <p className=\"message-body-content\">{text}</p>\r\n\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default Message;\r\n","import axios from 'axios';\r\nimport React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from 'react-router-dom';\r\nimport './App.css';\r\n\r\nimport Message from './components/Message.js';\r\n\r\nconst API = 'https://randomuser.me/api?results=10';\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      userData: [],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    axios.get(API)\r\n      .then(res => {\r\n        console.log(res.data);\r\n        // обновляем состояние приложения после получения данных:\r\n        this.setState({ userData: res.data.results });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { userData } = this.state;\r\n    return (\r\n      <Router>\r\n        <nav className=\"navigation\">\r\n          <ul className=\"navigation-list\">\r\n\r\n            <li>\r\n              <Link to=\"/\" className=\"navigation-link\">Home</Link>\r\n            </li>\r\n\r\n            <li>\r\n              <Link to=\"/hello\" className=\"navigation-link\">Hello</Link>\r\n            </li>\r\n\r\n\r\n            <li>\r\n              <Link to=\"/signin\" className=\"navigation-link\">Sign in</Link>\r\n            </li>\r\n\r\n          </ul>\r\n        </nav>\r\n        <Switch>\r\n          <Route path=\"/\" exact>\r\n            <div className='App'>\r\n              {userData.map(({ name, picture, location, id }, index) => {\r\n                return (\r\n                  <Message\r\n                    // give away props\r\n                    name={`${name.first} ${name.last}`}\r\n                    logo={picture.thumbnail}\r\n                    title={location.country}\r\n                    text={location.city}\r\n                    key={id.value}\r\n                  />\r\n                );\r\n              })}\r\n            </div>\r\n          </Route>\r\n          <Route path=\"/hello\">\r\n            <p className='App__text'>Hello</p>\r\n          </Route>\r\n          <Route path=\"/signin\">\r\n            <p className='App__text'>I am registrator</p>\r\n          </Route>\r\n        </Switch>\r\n\r\n      </Router >\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker'; deleting\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister(); deleting\n"],"sourceRoot":""}